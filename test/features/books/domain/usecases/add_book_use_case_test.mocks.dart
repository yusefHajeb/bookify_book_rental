// Mocks generated by Mockito 5.4.6 from annotations
// in bookify_book_rental/test/features/books/domain/usecases/add_book_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:bookify_book_rental/core/error_handler/failures.dart' as _i5;
import 'package:bookify_book_rental/features/books/domain/entities/book_entity.dart'
    as _i6;
import 'package:bookify_book_rental/features/books/domain/entities/rental_entity.dart'
    as _i7;
import 'package:bookify_book_rental/features/books/domain/repositories/book_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BookRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookRepository extends _i1.Mock implements _i3.BookRepository {
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.BookEntity>>> getAllBooks() =>
      (super.noSuchMethod(
            Invocation.method(#getAllBooks, []),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i6.BookEntity>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i6.BookEntity>>(
                    this,
                    Invocation.method(#getAllBooks, []),
                  ),
                ),
            returnValueForMissingStub:
                _i4.Future<_i2.Either<_i5.Failure, List<_i6.BookEntity>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i6.BookEntity>>(
                    this,
                    Invocation.method(#getAllBooks, []),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.BookEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.BookEntity>>> searchBooks(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchBooks, [query]),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i6.BookEntity>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i6.BookEntity>>(
                    this,
                    Invocation.method(#searchBooks, [query]),
                  ),
                ),
            returnValueForMissingStub:
                _i4.Future<_i2.Either<_i5.Failure, List<_i6.BookEntity>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i6.BookEntity>>(
                    this,
                    Invocation.method(#searchBooks, [query]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.BookEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.BookEntity>> getBookById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getBookById, [id]),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i6.BookEntity>>.value(
                  _FakeEither_0<_i5.Failure, _i6.BookEntity>(
                    this,
                    Invocation.method(#getBookById, [id]),
                  ),
                ),
            returnValueForMissingStub:
                _i4.Future<_i2.Either<_i5.Failure, _i6.BookEntity>>.value(
                  _FakeEither_0<_i5.Failure, _i6.BookEntity>(
                    this,
                    Invocation.method(#getBookById, [id]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.BookEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.BookEntity>> addBook(
    _i6.BookEntity? book,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addBook, [book]),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i6.BookEntity>>.value(
                  _FakeEither_0<_i5.Failure, _i6.BookEntity>(
                    this,
                    Invocation.method(#addBook, [book]),
                  ),
                ),
            returnValueForMissingStub:
                _i4.Future<_i2.Either<_i5.Failure, _i6.BookEntity>>.value(
                  _FakeEither_0<_i5.Failure, _i6.BookEntity>(
                    this,
                    Invocation.method(#addBook, [book]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.BookEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.BookEntity>> updateBook(
    _i6.BookEntity? book,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateBook, [book]),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i6.BookEntity>>.value(
                  _FakeEither_0<_i5.Failure, _i6.BookEntity>(
                    this,
                    Invocation.method(#updateBook, [book]),
                  ),
                ),
            returnValueForMissingStub:
                _i4.Future<_i2.Either<_i5.Failure, _i6.BookEntity>>.value(
                  _FakeEither_0<_i5.Failure, _i6.BookEntity>(
                    this,
                    Invocation.method(#updateBook, [book]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.BookEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteBook(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBook, [id]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
              _FakeEither_0<_i5.Failure, void>(
                this,
                Invocation.method(#deleteBook, [id]),
              ),
            ),
            returnValueForMissingStub:
                _i4.Future<_i2.Either<_i5.Failure, void>>.value(
                  _FakeEither_0<_i5.Failure, void>(
                    this,
                    Invocation.method(#deleteBook, [id]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.RentalEntity>> rentBook({
    required int? userId,
    required int? bookId,
    required DateTime? rentalDate,
    required DateTime? dueDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#rentBook, [], {
              #userId: userId,
              #bookId: bookId,
              #rentalDate: rentalDate,
              #dueDate: dueDate,
            }),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i7.RentalEntity>>.value(
                  _FakeEither_0<_i5.Failure, _i7.RentalEntity>(
                    this,
                    Invocation.method(#rentBook, [], {
                      #userId: userId,
                      #bookId: bookId,
                      #rentalDate: rentalDate,
                      #dueDate: dueDate,
                    }),
                  ),
                ),
            returnValueForMissingStub:
                _i4.Future<_i2.Either<_i5.Failure, _i7.RentalEntity>>.value(
                  _FakeEither_0<_i5.Failure, _i7.RentalEntity>(
                    this,
                    Invocation.method(#rentBook, [], {
                      #userId: userId,
                      #bookId: bookId,
                      #rentalDate: rentalDate,
                      #dueDate: dueDate,
                    }),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i7.RentalEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.RentalEntity>>> getUserRentals(
    int? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getUserRentals, [userId]),
            returnValue:
                _i4.Future<
                  _i2.Either<_i5.Failure, List<_i7.RentalEntity>>
                >.value(
                  _FakeEither_0<_i5.Failure, List<_i7.RentalEntity>>(
                    this,
                    Invocation.method(#getUserRentals, [userId]),
                  ),
                ),
            returnValueForMissingStub:
                _i4.Future<
                  _i2.Either<_i5.Failure, List<_i7.RentalEntity>>
                >.value(
                  _FakeEither_0<_i5.Failure, List<_i7.RentalEntity>>(
                    this,
                    Invocation.method(#getUserRentals, [userId]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i7.RentalEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.RentalEntity>>> getAllRentals() =>
      (super.noSuchMethod(
            Invocation.method(#getAllRentals, []),
            returnValue:
                _i4.Future<
                  _i2.Either<_i5.Failure, List<_i7.RentalEntity>>
                >.value(
                  _FakeEither_0<_i5.Failure, List<_i7.RentalEntity>>(
                    this,
                    Invocation.method(#getAllRentals, []),
                  ),
                ),
            returnValueForMissingStub:
                _i4.Future<
                  _i2.Either<_i5.Failure, List<_i7.RentalEntity>>
                >.value(
                  _FakeEither_0<_i5.Failure, List<_i7.RentalEntity>>(
                    this,
                    Invocation.method(#getAllRentals, []),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i7.RentalEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.RentalEntity>> updateRentalStatus({
    required int? rentalId,
    required _i7.RentalStatus? status,
    DateTime? returnDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateRentalStatus, [], {
              #rentalId: rentalId,
              #status: status,
              #returnDate: returnDate,
            }),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i7.RentalEntity>>.value(
                  _FakeEither_0<_i5.Failure, _i7.RentalEntity>(
                    this,
                    Invocation.method(#updateRentalStatus, [], {
                      #rentalId: rentalId,
                      #status: status,
                      #returnDate: returnDate,
                    }),
                  ),
                ),
            returnValueForMissingStub:
                _i4.Future<_i2.Either<_i5.Failure, _i7.RentalEntity>>.value(
                  _FakeEither_0<_i5.Failure, _i7.RentalEntity>(
                    this,
                    Invocation.method(#updateRentalStatus, [], {
                      #rentalId: rentalId,
                      #status: status,
                      #returnDate: returnDate,
                    }),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i7.RentalEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.RentalEntity>> getRentalById(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getRentalById, [id]),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i7.RentalEntity>>.value(
                  _FakeEither_0<_i5.Failure, _i7.RentalEntity>(
                    this,
                    Invocation.method(#getRentalById, [id]),
                  ),
                ),
            returnValueForMissingStub:
                _i4.Future<_i2.Either<_i5.Failure, _i7.RentalEntity>>.value(
                  _FakeEither_0<_i5.Failure, _i7.RentalEntity>(
                    this,
                    Invocation.method(#getRentalById, [id]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i7.RentalEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> isBookAvailable(int? bookId) =>
      (super.noSuchMethod(
            Invocation.method(#isBookAvailable, [bookId]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
              _FakeEither_0<_i5.Failure, bool>(
                this,
                Invocation.method(#isBookAvailable, [bookId]),
              ),
            ),
            returnValueForMissingStub:
                _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
                  _FakeEither_0<_i5.Failure, bool>(
                    this,
                    Invocation.method(#isBookAvailable, [bookId]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}
